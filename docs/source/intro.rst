Introduction
============

``in construction``

In this section, we explain how the package is organized to aid potential users. It is worth highlighting that we have
designed the code in a modular way. In this manner, users can easily employ separate parts of the workflow without
needing to rewrite the source code.

The **input** folder is where the set of molecules is stored, with a directory for each molecular set. The **output**  folder stores all files generated by
POMSimulator, while the **utilities** folder contains a wide array of programs for tasks such as plotting speciation diagrams, calculating linear regressions among others. The **pomsimulator/modules/** folder is essential
to POMSimulator, as it houses the most critical files: the `graph_module`, `text_module`, and `msce_module`, `DataBase`, `plotting_module`
and `stats_module`. These files are responsible for the implementation of the main code, enabling the program to function properly.
The DataBase.py file contains different experimental data such as formation constants or molecule labeling. There is also usefull information
such as the predefined reaction types used by the msce_module.


.. important::
   The Graph module oversees several key functions related to the generation and applications of graphs. The MSCE module is responsible
   for the resolution of the equations systems of the speciation models. The Text module controls functions related to input parsing and output writing.

The image below shows an overview of the workflow of POMSimulator, indicating the most important parts and processes:

.. image:: ../.img/pom_workflow_manual.png
   :alt: drawing
   :width: 1000
   :align: center




